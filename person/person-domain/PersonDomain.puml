@startuml
package person {
    class PersonApplicationService <<application service>> {
        + createPartner(CreatePartnerCommand) : Partner
        + addAddressToPartner(PNumber, CreateAddressCommand) : Partner
    }
    class PartnerFactory <<service>> {
        - idRepository : BusinessNumberRepository
        + createPartner(CreatePartnerCommand) : Partner
    }
    class BusinessNumberRepository <<repository>> {
        + fetchNextPNumber() : PNumber
        + fetchNextAddressNumber() : AddressNumber
    }
    class PartnerRepository <<repository>> {
        + putPartner(Partner) : Partner
        + fetchPartnerById(PNumber) : Partner
        + searchPartner(SearchPartnerQuery) : List<Partner>
    }
    class CreatePartnerCommand <<vo>> {
        - name : String
        - forename : String
        - birthDate : LocalDate
        - socialSecurityNumber : String
    }
    class CreateAddressCommand <<vo>> {
        - addressNumber : String
        - main : boolean
    }
    class SearchPartnerQuery <<vo>> {
        - name : String
        - socialSecurityNumber : String
    }
    class Partner <<root entity>> {
        - id : PNumber
        - forename : PostalLine
        - name : PostalLine
        - birthDate : LocalDate
        - socialSecurityNumber : SocialSecurityNumber
        - addresses : List<Address>
        + addAddress(Address) : void
        + modifyAddress(Address) : void
        + removeAddress(Address) : void
        + allAddresses() : List<Address>
        + mainAddressNumber() : Address
    }
    class Address <<entity>> {
        - id : AddressNumber
        - addressNumber : String
        - main : boolean
    }
    class AddressNumber <<vo>>
    class PostalLine <<vo>> {
        - line : String
    }
    class SocialSecurityNumber <<vo>> {
        number : long
    }
    PersonApplicationService -- PartnerFactory
    PersonApplicationService -- PartnerRepository
    PersonApplicationService -- BusinessNumberRepository
    PersonApplicationService - CreateAddressCommand

    PartnerFactory - BusinessNumberRepository
    PartnerFactory -- CreatePartnerCommand

    PartnerRepository -- Partner
    PartnerRepository -- SearchPartnerQuery

    Partner -- PostalLine
    Partner o-- Address
    Partner -- SocialSecurityNumber

    Address -- AddressNumber

}

package shared {
    class PNumber <<vo>>

    abstract BusinessNumber <<vo>> {
        - number : long
        {abstract} format() : String
    }

    PNumber --|> BusinessNumber
}

Partner -> PNumber
AddressNumber -|> BusinessNumber

legend left
- PNumber has format 'P' followed by 8 digits (ex : P12345678)
- PostalLine can only contains 30 characters
- SocialSecurityNumber is 13 digits number which begin by '756' that is formatted in string as 756.XXXX.XXXX.XX

end legend

@enduml